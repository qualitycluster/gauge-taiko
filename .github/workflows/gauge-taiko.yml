# This is a basic workflow to help you get started with Actions

name: Gauge-Taiko-Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          
      - name: Install NPM Taiko dependencies
        run: |
          npm install
          
      - name: Install Gauge
        run: |
          npm install -g @getgauge/cli
        shell: bash
        
          
      - name: Run Tests
        run: |
          gauge run --tags="gauge-test & !Ignore"



      - name: SaveDateTime
        if: always()  
        run: echo "currentTimestamp=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: SaveArtifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Gauge-Test-Report
          path: ${{ env.TEST_REPORT_FOLDER }}/reports/


      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: tests-logs
          path: ${{ env.TEST_REPORT_FOLDER }}/logs


      - name: Deploy to GitHub Pages
        if: always()
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: ${{ env.TEST_REPORT_FOLDER }}/reports
          token: ${{ secrets.GITHUB_TOKEN }}
          target-folder: reports/${{ env.currentTimestamp }}

      - name: Link to Report
        if: always()
        run: |
          echo "::group::Link to Report"
          echo "https://dvag.github.io/vp-digital-integration-test/reports/${{ env.currentTimestamp }}/html-report/index.html"
